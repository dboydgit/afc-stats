{"version":3,"sources":["Components/Header.js","Components/Home.js","Components/GameSetup.js","Components/Stats.js","Components/Subs.js","Components/Team.js","Components/Teams.js","Components/Games.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Home","props","useState","userVal","setUserVal","userID","onSubmit","e","preventDefault","setUserID","localStorage","setItem","id","type","value","onChange","target","to","GameSetup","time","setTime","dark","setDark","light","setLight","statTeam","setStatTeam","offence","setOffence","error","setError","teamNames","key","teams","team","push","name","htmlFor","min","max","onClick","offenceBool","finishSetup","Stats","setGameLength","setDarkTeam","setLightTeam","showSetup","setShowSetup","parseInt","Subs","Player","player","setPlayer","ind","newTeams","teamInd","findIndex","el","playerInd","setTeams","PlayerList","listItems","players","map","Team","showPlayers","setShowPlayers","toggleShowPlayers","gm","deleteTeam","saveTeams","TeamList","Teams","db","localDB","teamName","setTeamName","teamGM","setTeamGM","showAddTeam","setShowAddTeam","teamPlayers","handleInputChange","console","log","get","then","doc","put","res","catch","splice","err","_id","Games","App","loadingDB","setLoadingDB","getItem","PouchDB","remoteDB","getData","useCallback","allDocs","include_docs","rows","forEach","row","useEffect","info","dbSync","sync","live","retry","on","changedDoc","change","docs","direction","cancel","path","exact","activeClassName","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2884ec2a.chunk.js","sourcesContent":["import React from 'react'\nimport '../styles/Header.css';\n\nexport default function Header() {\n    return (\n        <header className='app-header'>\n            <h1>AFC Premier League Stats</h1>\n        </header>\n    )\n}\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/Home.css';\nimport Header from './Header';\n\nexport default function Home(props) {\n\n    const [userVal, setUserVal] = useState('');\n\n    // set the userID on form submit\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        props.setUserID(userVal);\n        localStorage.setItem('userID', userVal);\n    }\n\n    // update state on form change\n    const handleChange = (e) => {\n        setUserVal(e.target.value);\n    }\n\n    return (\n        <div className='App'>\n            <Header />\n            <div className='home-content'>\n                {!props.userID &&\n                    <div className='home-form'>\n                        <p>Who is taking stats?</p>\n                        <form onSubmit={handleSubmit}>\n                            <input id='home-input' type='text' value={userVal} onChange={handleChange} />\n                            <button className='btn' type='submit'>Start</button>\n                        </form>\n                    </div>\n                }\n                {props.userID &&\n                    <div>\n                        <p>{`Welcome, ${props.userID}`}</p>\n                        <div className=\"home-btn-group\">\n                            <Link\n                                className='btn'\n                                to='/stats'>Stats\n                            </Link>\n                            <Link\n                                className='btn'\n                                to='/subs'>Subs\n                            </Link>\n                            <Link\n                                className='btn'\n                                to='/teams'>Teams\n                            </Link>\n                            <Link\n                                className='btn'\n                                to='/games'>Past Games\n                            </Link>\n                        </div>\n                    </div>\n                }\n            </div>\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport '../styles/GameSetup.css';\n\nexport default function GameSetup(props) {\n\n    const [time, setTime] = useState('25');\n    const [dark, setDark] = useState('');\n    const [light, setLight] = useState('');\n    const [statTeam, setStatTeam] = useState('');\n    const [offence, setOffence] = useState('');\n    const [error, setError] = useState('');\n\n    let teamNames = [<option value='' key=''></option>];\n    for (let team of props.teams) {\n        teamNames.push(<option value={team.name} key={team.name}>{team.name}</option>);\n    }\n\n    const submitFinish = (e) => {\n        e.preventDefault();\n        if (!dark || !light || !statTeam || !offence) {\n            setError('Please choose all options');\n            return;\n        }\n        let offenceBool;\n        statTeam === offence ? offenceBool = true : offenceBool = false;\n        props.finishSetup(time, dark, light, statTeam, offenceBool);\n    }\n\n    return (\n        <div className='game-setup card'>\n            <h3 id='setup-title'>Game Setup</h3>\n            <label htmlFor='game-length'>Game Length (mins)</label>\n            <input name='game-length' type='number' min='1' max='120'\n                value={time} onChange={(e) => setTime(e.target.value)} />\n            <label htmlFor='dark-team'>Select Dark Team</label>\n            <select name='dark-team' value={dark}\n                onChange={(e) => setDark(e.target.value)}>{teamNames}</select>\n            <label htmlFor='light-team'>Select Light Team</label>\n            <select name='light-team' value={light}\n                onChange={(e) => setLight(e.target.value)}>{teamNames}</select>\n                     \n            <label htmlFor='stat-team'>Taking Stats For</label>\n            <select name='stat-team' value={statTeam}\n                onChange={(e) => setStatTeam(e.target.value)}>\n                <option></option>\n                <option>{`${dark} (dark)`}</option>\n                <option>{`${light} (light)`}</option>\n            </select>\n            <label htmlFor='offence-team'>Team on Offence</label>\n            <select name='offence-team' value={offence}\n                onChange={(e) => setOffence(e.target.value)}>\n                <option></option>\n                <option>{`${dark} (dark)`}</option>\n                <option>{`${light} (light)`}</option>\n            </select>\n            <button className='btn' onClick={submitFinish}>Finish Setup</button>\n            {error &&\n                <span className='form-err'>{error}</span>}   \n        </div>\n    )\n}\n","import React, {useState} from 'react'\nimport GameSetup from './GameSetup';\nimport '../styles/Stats.css';\n\nexport default function Stats(props) {\n\n    const [gameLength, setGameLength] = useState(25);\n    const [darkTeam, setDarkTeam] = useState('');\n    const [lightTeam, setLightTeam] = useState('');\n    const [gameHistory, setGameHistory] = useState([]);\n    const [showSetup, setShowSetup] = useState(true);\n    const [statTeam, setStatTeam] = useState('');\n    const [offence, setOffence] = useState(true);\n\n    const finishSetup = (time, dark, light, statTeam, offence) => {\n        setGameLength(parseInt(time));\n        setDarkTeam(dark);\n        setLightTeam(light);\n        setStatTeam(statTeam);\n        setOffence(offence);\n        setShowSetup(false);\n    }\n\n    return (\n        <div className='App'>\n            <div className='stats'>\n                {showSetup &&\n                <GameSetup \n                    teams={props.teams}\n                    finishSetup={finishSetup}\n                />}\n                {!showSetup &&\n                <div>\n                    <h1>Taking Stats...</h1>\n                </div>}\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Subs(props) {\n    return (\n        <div className='App'>\n            <h1>SUBS!</h1>\n        </div>\n    )\n}\n","import React, { useState } from 'react'\n\nconst Player = (props) => {\n\n    const [player, setPlayer] = useState(props.player);\n\n    const handlePlayerChange = (e) => {\n        setPlayer(e.target.value);\n        let newTeams = [...props.teams];\n        let teamInd = newTeams.findIndex(el => el.name === props.team.name);\n        let playerInd = parseInt(e.target.name);\n        newTeams[teamInd]['players'][playerInd] = e.target.value;\n        props.setTeams(newTeams);\n    }\n\n    return <input\n        className='player-card'\n        name={props.ind}\n        value={player}\n        onChange={handlePlayerChange} />\n}\n\nconst PlayerList = (props) => {\n\n    let players = props.team.players;\n    const listItems = players.map((player, ind) =>\n        <Player\n            player={player}\n            ind={ind}\n            key={ind}\n            teams={props.teams}\n            setTeams={props.setTeams}\n            team={props.team}\n        />\n    );\n    return <div className='player-list'>{listItems}</div>\n}\n\nexport default function Team(props) {\n\n    const [showPlayers, setShowPlayers] = useState(false);\n\n    const toggleShowPlayers = () => {\n        setShowPlayers(!showPlayers);\n    }\n\n    const saveTeam = () => {\n        props.saveTeams();\n        toggleShowPlayers();\n    }\n\n    return (\n        <div className='card team-card'>\n            <div className='team-name'>\n                <span>{`${props.team.name}`}</span>\n            </div>\n            <div className='card-info'>\n                <span className='gm-name'>{`GM: ${props.team.gm}`}</span>\n                <span className='card-link' onClick={toggleShowPlayers}>\n                    <span>Players</span>\n                    {!showPlayers && <i className=\"material-icons md-18\">arrow_drop_down</i>}\n                    {showPlayers && <i className=\"material-icons md-18\">arrow_drop_up</i>}\n                </span>\n            </div>\n            {showPlayers &&\n                <div className='card-players'>\n                    <PlayerList\n                        team={props.team}\n                        teams={props.teams}\n                        setTeams={props.setTeams}\n                    />\n                    <button className='btn btn-del' name={props.ind} onClick={props.deleteTeam}>Delete Team</button>\n                    <button className='btn' onClick={saveTeam}>Save Changes</button>\n                </div>\n                }\n        </div>\n    )\n}\n","import React, {useState} from 'react';\nimport Team from './Team';\nimport '../styles/Teams.css'\n\nconst TeamList = (props) => {\n    const teams = props.teams.map((team, ind) =>\n    <Team\n        team={team}\n        ind={ind}\n        key={team.name}\n        teams={props.teams}\n        setTeams={props.setTeams}\n        saveTeams={props.saveTeams}\n        deleteTeam={props.deleteTeam}\n    />);\n    return (\n        <div className='team-list'>{teams}</div>\n    )\n}\n\nexport default function Teams(props) {\n\n    const db = props.localDB;\n\n    const [teamName, setTeamName] = useState('');\n    const [teamGM, setTeamGM] = useState('');\n    const [showAddTeam, setShowAddTeam] = useState(false);\n\n    const teamPlayers = [\n        'Player1',\n        'Player2',\n        'Player3',\n        'Player4',\n        'Player5',\n        'Player6',\n        'Player7',\n        'Player8',\n        'Player9',\n        'Player10'\n    ];\n\n    const handleInputChange = (e) => {\n        switch (e.target.name) {\n            case 'team-name':\n                setTeamName(e.target.value);\n                break;\n            case 'team-gm':\n                setTeamGM(e.target.value);\n                break;\n            default:\n                console.log('State not updated!');\n        }\n    }\n\n    const updateTeams = (teams) => {\n        db.get('team-doc').then(doc => {\n            doc.teams = teams;\n            return db.put(doc);\n        }).then(res => console.log(res))\n        .catch(err => {\n            if (err.name === 'not_found') {\n                db.put({\n                    _id: 'team-doc',\n                    teams: teams\n                })\n                console.log('New Team doc created')\n            } else {\n                console.log(err);\n            }\n        })\n    }\n\n    const createTeam = (e) => {\n        e.preventDefault();\n        let newTeams = [...props.teams];\n        newTeams.push({\n            name: teamName,\n            gm: teamGM,\n            players: teamPlayers\n        });\n        // update state with new teams\n        props.setTeams(newTeams);\n        // add teams to DB\n        updateTeams(newTeams);\n        // clear form\n        setTeamName('');\n        setTeamGM('');\n        setShowAddTeam(false);\n    }\n\n    const saveTeams = () => {\n        console.log('Saving Teams');\n        let newTeams = [...props.teams];\n        db.get('team-doc').then(doc => {\n            doc.teams = newTeams;\n            return db.put(doc);\n        }).then(res => console.log(res))\n        .catch(e => console.log(e))\n    }\n\n    const deleteTeam = (e) => {\n        let teamInd = parseInt(e.target.name);\n        let newTeams = [...props.teams];\n        newTeams.splice(teamInd, 1);\n        props.setTeams(newTeams);\n        db.get('team-doc').then(doc => {\n            doc.teams = newTeams;\n            return db.put(doc);\n        }).then(res => console.log(res))\n        .catch(e => console.log(e))\n    }\n\n    return (\n        <div className='App'>\n            <TeamList\n                teams={props.teams}\n                setTeams={props.setTeams}\n                saveTeams={saveTeams}\n                deleteTeam={deleteTeam}\n            />\n            {!showAddTeam && \n            <button className='btn' onClick={() => {setShowAddTeam(true)}}>Add Team</button>}\n            {showAddTeam && \n            <div className='add-team-form'>\n                <label htmlFor='team-name'>Team Name: </label>\n                <input name='team-name' onChange={handleInputChange} value={teamName}/>\n                <label htmlFor='team-gm'>Team GM: </label>\n                <input name='team-gm' onChange={handleInputChange} value={teamGM}/>\n                <button className='btn' onClick={createTeam}>Create Team</button>\n                <button className='btn nmt' onClick={() => setShowAddTeam(false)}>Cancel</button>\n            </div>}\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Games() {\n    return (\n        <div className='App'>\n            <h1>GAMES!</h1>\n        </div>\n    )\n}\n","import React, { useEffect, useState, useCallback } from 'react';\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n  NavLink\n} from \"react-router-dom\";\nimport './styles/App.css';\nimport PouchDB from 'pouchdb';\nimport Home from './Components/Home';\nimport Stats from './Components/Stats';\nimport Subs from './Components/Subs';\nimport Teams from './Components/Teams';\nimport Games from './Components/Games';\n\nfunction App() {\n\n  const DB_HOST = process.env.NODE_ENV === 'development' ?\n    'http://localhost:5984' :\n    'https://db-couchdb.duckdns.org';\n\n  // set state\n  const [loadingDB, setLoadingDB] = useState(true);\n  const [userID, setUserID] = useState(localStorage.getItem('userID') || '');\n  const [remoteDB] = useState(new PouchDB(`${DB_HOST}/ultimate-stats`));\n  const [localDB] = useState(new PouchDB('ultimate-stats'));\n  const [teams, setTeams] = useState([]);\n\n  const getData = useCallback(() => {\n    if (!remoteDB) return;\n    setLoadingDB(true)\n    remoteDB.allDocs({ include_docs: true }).then(res => {\n      console.log('Documents fetched');\n      console.log(res);\n      setLoadingDB(false);\n      res.rows.forEach(row => {\n        if (row.doc._id === 'team-doc') setTeams(row.doc.teams);\n      })\n    })\n  }, [remoteDB])\n\n  // handle remote document update\n  const handleRemoteUpdate = (doc) => {\n    // TODO update the state on remote update.\n    console.log(doc)\n  }\n\n  // get data from the DB when ready\n  useEffect(() => {\n    if (!remoteDB) return;\n    remoteDB.info();\n    getData();\n  }, [remoteDB, getData])\n\n  // Effect for handling remote DB changes\n  useEffect(() => {\n    if (loadingDB || !localDB || !remoteDB) return;\n    let dbSync;\n    dbSync = localDB.sync(remoteDB, {\n      live: true,\n      retry: true,\n      include_docs: true,\n    }).on('change', (e) => {\n      console.log('Database Change');\n      console.log(e);\n      let changedDoc = e.change.docs[0];\n      if (e.direction === 'pull') {\n        handleRemoteUpdate(changedDoc);\n        console.log(`Updated: ${changedDoc._id}`);\n      } else {\n        console.log('This was a local change');\n      }\n    }).on('active', () => console.log('Sync Active'))\n      .on('error', () => console.log('Database Sync Error'));\n    return () => {\n      dbSync.cancel();\n      console.log('Sync Cancelled');\n    };\n  }, [loadingDB, localDB, remoteDB])\n\n  return (\n    <Router>\n      <Switch>\n        <Route path='/' exact>\n          <Home\n            userID={userID}\n            setUserID={setUserID}\n            localDB={localDB}\n          />\n        </Route>\n        <Route path='/stats'>\n          {userID ?\n          <Stats\n            userID={userID}\n            localDB={localDB}\n            teams={teams}\n          /> : <Redirect to='/' />}\n        </Route>\n        <Route path='/subs'>\n          {userID ?\n          <Subs\n            userID={userID}\n            localDB={localDB}\n          /> : <Redirect to='/' />}\n        </Route>\n        <Route path='/teams'>\n          {userID ?\n          <Teams \n            teams={teams}\n            setTeams={setTeams}\n            localDB={localDB}\n          /> : <Redirect to='/' />}\n        </Route>\n        <Route path='/games'>\n          <Games />\n        </Route>\n      </Switch>\n      <div className='bottom-nav'>\n        <NavLink className='nav-link' to='/' exact activeClassName='nav-active'>Home</NavLink>\n        <NavLink className='nav-link' to='/stats' activeClassName='nav-active'>Stats</NavLink>\n        <NavLink className='nav-link' to='/subs' activeClassName='nav-active'>Subs</NavLink>\n        <NavLink className='nav-link' to='/teams' activeClassName='nav-active'>Teams</NavLink>\n        <NavLink className='nav-link' to='/games' activeClassName='nav-active'>Games</NavLink>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}